{"version":3,"sources":["column-modal.js","images/sort-up.svg","images/sort-down.svg","CustomDynamicTable.js","constant.js","App.js","reportWebVitals.js","index.js"],"names":["ColumnModal","props","Modal","size","aria-labelledby","centered","show","openColumnModal","onHide","toggleColumnModal","Header","closeButton","Title","id","Body","className","onDragOver","Object","keys","columns","map","header","index","data-id","draggable","onDragEnd","onDragStart","head","CustomDynamicTable","dragged","over","useState","visibleColumns","updateVisibleColumns","displayColumnDropdown","toggleColumnDropdown","allRowSelected","toggleAllRowSelection","currentPage","updateCurrentPage","allData","updateAllData","detectDataUpdate","toggleDataUpdate","placeholder","document","createElement","navigate","useNavigate","formatWrappedObject","key","item","value","forEach","each","openLink","localHeaderData","localRowData","finalUrl","linkTo","isParam","param","length","query","queryTextToDisplay","sort","headerVal","sortType","localTableConfig","tableConfig","wholeHeaderFormatObj","headerFormat","selectedHeaderObj","option","isActive","type","multiSort","obj","localAllData","sortOrder","headerKey","a","b","result","sortData","updateTableConfig","commonFunctionForAllDataFilter","filterType","searchText","filteredAllData","isInIf","filterObject","selectedItem","push","trim","RegExp","test","moment","format","dateFormat","replaceAll","idArr","selected","uniqueRowKey","includes","handlePageClick","page","handlePageChange","handleRowSelect","dataItem","localData","tableData","multipleSelectable","updateTableData","handleMultipleRowSelect","selectUnselectAllRow","changeTableData","skip","limit","Number","slice","dragStart","e","currentTarget","dataTransfer","effectAllowed","setData","dragEnd","style","display","parentNode","removeChild","from","dataset","to","fromKey","newKeys","beforeTo","inBetween","last","concat","beforeFrom","updateHeaderDataDragDrop","dragOver","preventDefault","target","insertBefore","displayTableData","dataArray","noDataColLength","radioSelectable","rowData","Form","Check","checked","onChange","ind","indexOf","populate","isLink","Button","variant","onClick","image","src","alt","altImageText","colSpan","noDataMessage","displayColumnReorderModal","reorderModal","reOrderColumn","displayColumnSelector","columnSelectorButton","sortUpImage","sortDownImage","width","marginLeft","verticalAlign","columnSelectorDropdown","label","localCols","splice","handleColumnChange","reorderButton","reOrderText","showHideColumn","columnSelectorPosition","displayTable","Table","striped","bordered","hover","position","opt","ind1","filter","every","Control","filterByText","Select","aria-label","list","find","filterBySelection","date","filterByDate","setDateFilter","showMonthDropdown","showYearDropdown","dropdownMode","isClearable","placeholderText","displayPagination","pagination","previousLabel","nextLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","pageCount","Math","ceil","onPageChange","containerClassName","paginationPosition","activeClassName","forcePage","useEffect","paginationCurrentPage","window","onclick","ev","htmlFor","displayFullView","initialTableData","personalInfo","fullName","phone","number","email","userId","accountStatus","createdAt","profileImage","initialTableConfig","App","sortedHeaderObj","console","log","selectedDate","selectedPageNumber","clickedRowItem","clickedIndex","updatedDataArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50f3f9a4.chunk.js","sourcesContent":["import Modal from 'react-bootstrap/Modal';\r\n\r\nconst ColumnModal = (props) => {\r\n    return (\r\n      <Modal\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={props.openColumnModal}\r\n        onHide={() => props.toggleColumnModal(false)}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Reorder Columns\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ul className='custom-table-column-reorder-list' onDragOver={props.onDragOver}>\r\n            {Object.keys(props.columns).map((header, index) => {\r\n              return <li\r\n                key={`column-checkbox-${index}`}\r\n                data-id={index}\r\n                draggable='true'\r\n                onDragEnd={props.onDragEnd}\r\n                onDragStart={props.onDragStart}\r\n              >\r\n                {props.columns[header].head}\r\n                \r\n              </li>\r\n            })}\r\n          </ul>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\nexport default ColumnModal;","export default __webpack_public_path__ + \"static/media/sort-up.a97fe783.svg\";","export default __webpack_public_path__ + \"static/media/sort-down.3829edc5.svg\";","// plugins\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ReactPaginate from 'react-paginate';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from 'moment';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// components\r\nimport ColumnModal from './column-modal';\r\n\r\n// images\r\nimport sortUpImage from './images/sort-up.svg';\r\nimport sortDownImage from './images/sort-down.svg';\r\n\r\n// css\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './custom-dynamic-table.css';\r\n\r\nconst CustomDynamicTable = (props) => {\r\n  const [visibleColumns, updateVisibleColumns] = useState([]);\r\n  const [displayColumnDropdown, toggleColumnDropdown] = useState(false);\r\n  const [allRowSelected, toggleAllRowSelection] = useState(false);\r\n  const [currentPage, updateCurrentPage] = useState(1);\r\n  const [allData, updateAllData] = useState([]);\r\n  const [detectDataUpdate, toggleDataUpdate] = useState(false);\r\n  const [openColumnModal, toggleColumnModal] = useState(false);\r\n\r\n  let dragged;\r\n  let over;\r\n  let placeholder = document.createElement(\"li\");\r\n  placeholder.className = \"placeholder\";\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // function to get the value from an object\r\n  const formatWrappedObject = (key, item) => {\r\n    let value = item;\r\n    if (typeof key !== \"string\") {\r\n      key.forEach(function (each) {\r\n        value = value[each];\r\n      });\r\n    } else {\r\n      value = value[key] || (value[key] !== 0 ? \"N/A\" : 0);\r\n    }\r\n    return value;\r\n  };\r\n\r\n  // function to open link if there is any link present in the table\r\n  const openLink = (localHeaderData, localRowData) => {\r\n    let key = '';\r\n    let finalUrl = localHeaderData.linkTo;\r\n    let isParam = true;\r\n    if (localHeaderData.param?.length) {\r\n      key = localHeaderData.param;\r\n    } else if (localHeaderData.query?.length) {\r\n      key = localHeaderData.query;\r\n      isParam = false;\r\n    }\r\n\r\n    if (typeof key !== \"string\") {\r\n      key.forEach(function (each, index) {\r\n        if (isParam) {\r\n          finalUrl += `/${localRowData[each]}`;\r\n        } else {\r\n          finalUrl += `${!index ? '?' : '&'}${localHeaderData.queryTextToDisplay[index]}=${localRowData[each]}`;\r\n        }\r\n      });\r\n    } else {\r\n      if (isParam) {\r\n        finalUrl += `/${localRowData[key]}`;\r\n      } else {\r\n        finalUrl += `?${localHeaderData.queryTextToDisplay}=${localRowData[key]}`;\r\n      }\r\n    }\r\n\r\n    navigate(finalUrl);\r\n  };\r\n\r\n  // function to choose column name from the column selector dropdown\r\n  const handleColumnChange = (headerKey) => {\r\n    const localCols = [...visibleColumns];\r\n    if (localCols.includes(props.tableConfig?.headerFormat[headerKey].head)) {\r\n      localCols.splice(localCols.indexOf(props.tableConfig?.headerFormat[headerKey].head), 1);\r\n    } else {\r\n      localCols.push(props.tableConfig?.headerFormat[headerKey].head);\r\n    }\r\n    updateVisibleColumns([...localCols]);\r\n  };\r\n\r\n  // function to handle sort if sorting is handled from UI\r\n  const sortData = (key, sortType) => {\r\n    let sortOrder = 1;\r\n    let headerKey = props.tableConfig.headerFormat[key].key;\r\n    if (sortType === \"DESC\") {\r\n      sortOrder = -1;\r\n    }\r\n    return (a, b) => {\r\n      let result = (formatWrappedObject(headerKey, a) < formatWrappedObject(headerKey, b))\r\n        ? -1 : (formatWrappedObject(headerKey, a) > formatWrappedObject(headerKey, b)) ? 1 : 0;\r\n      return sortOrder * result;\r\n    }\r\n  };\r\n\r\n  // function to handle sort functionality\r\n  const sort = (headerVal, sortType) => {\r\n    const localTableConfig = { ...props.tableConfig };\r\n    const wholeHeaderFormatObj = { ...localTableConfig?.headerFormat };\r\n    const selectedHeaderObj = { ...wholeHeaderFormatObj[headerVal] };\r\n    selectedHeaderObj.option.forEach(each => {\r\n      each.isActive = false;\r\n      if (each.type === sortType) {\r\n        each.isActive = true;\r\n      }\r\n    });\r\n    if (!localTableConfig.multiSort) {\r\n      for (let obj in wholeHeaderFormatObj) {\r\n        if (obj !== headerVal) {\r\n          if (wholeHeaderFormatObj[obj].sort) {\r\n            wholeHeaderFormatObj[obj].option?.forEach(each => {\r\n              each.isActive = false;\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      if (props.tableConfig?.allData) {\r\n        const localAllData = [...allData];\r\n        localAllData.sort(sortData(headerVal, sortType));\r\n        updateAllData([...localAllData]);\r\n        toggleDataUpdate(true);\r\n      }\r\n    }\r\n    wholeHeaderFormatObj[headerVal] = { ...selectedHeaderObj };\r\n    localTableConfig.headerFormat = { ...wholeHeaderFormatObj };\r\n    props.updateTableConfig({ ...localTableConfig });\r\n    props.sortData({ ...selectedHeaderObj }, sortType);\r\n  };\r\n\r\n  // common function to filter all data (if filter is handled from UI)\r\n  const commonFunctionForAllDataFilter = (filterType, searchText, key, selectedHeaderObj) => {\r\n    const localAllData = [...props.allData];\r\n    let filteredAllData = [];\r\n    let isInIf = false;\r\n\r\n    if (filterType === \"SELECT\") {\r\n      if (searchText !== \"-1\") {\r\n        isInIf = true;\r\n        localAllData.forEach(each => {\r\n          if (formatWrappedObject(props.tableConfig?.headerFormat[key].key, each) === selectedHeaderObj.filterObject.selectedItem.value) {\r\n            filteredAllData.push({ ...each });\r\n          }\r\n        });\r\n      }\r\n    } else if (filterType === \"TEXT\") {\r\n      if (searchText.trim().length) {\r\n        isInIf = true;\r\n        localAllData.forEach(each => {\r\n          if (new RegExp(searchText, 'i').test(formatWrappedObject(props.tableConfig?.headerFormat[key].key, each))) {\r\n            filteredAllData.push({ ...each });\r\n          }\r\n        });\r\n      }\r\n    } else if (filterType === \"DATE\") {\r\n      if (searchText !== null || searchText !== \"null\") {\r\n        isInIf = true;\r\n        localAllData.forEach(each => {\r\n          if (formatWrappedObject(props.tableConfig?.headerFormat[key].key, each) === moment(searchText).format(props.tableConfig?.headerFormat[key].filterObject?.dateFormat.replaceAll('d', 'D'))) {\r\n            filteredAllData.push({ ...each });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!isInIf) {\r\n      const idArr = [];\r\n      allData.forEach(each => {\r\n        if (each.selected) {\r\n          idArr.push(each[props.tableConfig?.uniqueRowKey]);\r\n        }\r\n      });\r\n      localAllData.forEach(each => {\r\n        if (idArr.includes(each[props.tableConfig?.uniqueRowKey])) {\r\n          each.selected = true;\r\n        }\r\n      });\r\n      filteredAllData = [...localAllData];\r\n    }\r\n\r\n    updateAllData([...filteredAllData]);\r\n\r\n    updateCurrentPage(1);\r\n\r\n    toggleDataUpdate(true);\r\n\r\n  };\r\n\r\n  // function to update the table when the table is filtered with input text\r\n  const filterByText = (searchText, key) => {\r\n    const localTableConfig = { ...props.tableConfig };\r\n    const wholeHeaderFormatObj = { ...localTableConfig?.headerFormat };\r\n    const selectedHeaderObj = { ...wholeHeaderFormatObj[key] };\r\n\r\n    selectedHeaderObj.filterObject.value = searchText;\r\n\r\n    wholeHeaderFormatObj[key] = { ...selectedHeaderObj };\r\n    localTableConfig.headerFormat = { ...wholeHeaderFormatObj };\r\n    props.updateTableConfig({ ...localTableConfig });\r\n\r\n    if (props.tableConfig?.allData) {\r\n      commonFunctionForAllDataFilter(\"TEXT\", searchText, key);\r\n    }\r\n    props.filterByText(searchText, key);\r\n  };\r\n\r\n  // function to update the table when the table is filtered with dropdown\r\n  const filterBySelection = (searchText, key) => {\r\n    const localTableConfig = { ...props.tableConfig };\r\n    const wholeHeaderFormatObj = { ...localTableConfig?.headerFormat };\r\n    const selectedHeaderObj = { ...wholeHeaderFormatObj[key] };\r\n\r\n    selectedHeaderObj.filterObject.selectedItem = { ...selectedHeaderObj.filterObject?.list.find(each => each.key === searchText) };\r\n\r\n    wholeHeaderFormatObj[key] = { ...selectedHeaderObj };\r\n    localTableConfig.headerFormat = { ...wholeHeaderFormatObj };\r\n    props.updateTableConfig({ ...localTableConfig });\r\n\r\n    if (props.tableConfig?.allData) {\r\n      commonFunctionForAllDataFilter(\"SELECT\", searchText, key, selectedHeaderObj);\r\n    }\r\n\r\n    props.filterBySelection(searchText, key);\r\n  };\r\n\r\n  // function to update the table when the table is filtered with date\r\n  const setDateFilter = (date, key) => {\r\n    const localTableConfig = { ...props.tableConfig };\r\n    const wholeHeaderFormatObj = { ...localTableConfig?.headerFormat };\r\n    const selectedHeaderObj = { ...wholeHeaderFormatObj[key] };\r\n\r\n    selectedHeaderObj.filterObject.value = date;\r\n\r\n    wholeHeaderFormatObj[key] = { ...selectedHeaderObj };\r\n    localTableConfig.headerFormat = { ...wholeHeaderFormatObj };\r\n    props.updateTableConfig({ ...localTableConfig });\r\n\r\n    if (props.tableConfig?.allData) {\r\n      commonFunctionForAllDataFilter(\"DATE\", date, key, selectedHeaderObj);\r\n    }\r\n\r\n    props.filterByDate(date, key);\r\n  };\r\n\r\n  // function to handle page click of the pagination\r\n  const handlePageClick = (page) => {\r\n    updateCurrentPage(page.selected + 1);\r\n    props.handlePageChange(page.selected + 1);\r\n  };\r\n\r\n  // function to choose a particular row of the table\r\n  const handleRowSelect = (dataItem, index) => {\r\n    let localData = [];\r\n    if (props.tableConfig?.allData) {\r\n      localData = [...allData];\r\n    } else {\r\n      localData = [...props.tableData];\r\n    }\r\n    if (props.tableConfig?.multipleSelectable) {\r\n      localData.forEach(each => {\r\n        if (each[props.tableConfig?.uniqueRowKey] === dataItem[props.tableConfig?.uniqueRowKey]) {\r\n          each.selected = !each.selected;\r\n        }\r\n      });\r\n      toggleAllRowSelection(false);\r\n    } else {\r\n      localData.forEach(each => {\r\n        if (each[props.tableConfig?.uniqueRowKey] === dataItem[props.tableConfig?.uniqueRowKey]) {\r\n          each.selected = true;\r\n        } else {\r\n          each.selected = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (props.tableConfig?.allData) {\r\n      updateAllData([...localData]);\r\n    } else {\r\n      props.updateTableData([...localData]);\r\n    }\r\n\r\n    props.handleMultipleRowSelect(dataItem, index, [...localData]);\r\n  };\r\n\r\n  // function to select all rows of a page\r\n  const selectUnselectAllRow = () => {\r\n    const localData = [...props.tableData];\r\n    localData.forEach(each => {\r\n      each.selected = !allRowSelected ? true : false;\r\n    });\r\n    toggleAllRowSelection(!allRowSelected);\r\n    props.updateTableData([...localData]);\r\n    props.selectUnselectAllRow(!allRowSelected);\r\n  };\r\n\r\n  // change the table data whenever update needed\r\n  const changeTableData = () => {\r\n    let localData = [];\r\n    const localTableConfig = { ...props.tableConfig };\r\n    let skip = props.tableConfig?.skip;\r\n    let limit = props.tableConfig?.limit;\r\n\r\n    skip = limit * (Number(currentPage - 1));\r\n    limit = limit * Number(currentPage);\r\n\r\n    localTableConfig.skip = skip;\r\n\r\n    props.updateTableConfig({ ...localTableConfig });\r\n\r\n    if (!allData || (allData && !allData.length)) {\r\n      localData = [...props.allData?.slice(skip, limit)];\r\n    } else {\r\n      localData = [...allData?.slice(skip, limit)];\r\n    }\r\n\r\n    props.updateTableData([...localData]);\r\n    toggleDataUpdate(false);\r\n  };\r\n\r\n  // function to update the table header according to the drag-drop result\r\n  const updateHeaderDataDragDrop = (from, to) => {\r\n    const localTableConfig = { ...props.tableConfig };\r\n    const wholeHeaderFormatObj = { ...localTableConfig?.headerFormat };\r\n    const obj = {};\r\n    const fromKey = Object.keys(wholeHeaderFormatObj)[from];\r\n    const keys = Object.keys(wholeHeaderFormatObj);\r\n    let newKeys = [];\r\n\r\n    if (to < from) {\r\n      const beforeTo = keys.slice(0, to);\r\n      const inBetween = keys.slice(to, from);\r\n      let last = [];\r\n      if (keys[from + 1]) {\r\n        last = keys.slice(from + 1);\r\n      }\r\n      newKeys = newKeys.concat([...beforeTo], fromKey, [...inBetween], [...last]);\r\n    } else if (to > from) {\r\n      const beforeFrom = keys.slice(0, from);\r\n      let inBetween = [];\r\n      if (keys[from + 1] && keys[to + 1]) {\r\n        inBetween = keys.slice(from + 1, to + 1);\r\n      }\r\n\r\n      let last = [];\r\n      if (keys[to + 1]) {\r\n        last = keys.slice(to + 1);\r\n      }\r\n      newKeys = newKeys.concat([...beforeFrom], [...inBetween], fromKey, [...last]);\r\n    } else {\r\n      newKeys = [...keys];\r\n    }\r\n\r\n    newKeys.forEach(each => {\r\n      obj[each] = wholeHeaderFormatObj[each];\r\n    });\r\n\r\n    localTableConfig.headerFormat = { ...obj };\r\n    props.updateTableConfig({ ...localTableConfig });\r\n  };\r\n\r\n  // function to detect where the drag is going to start\r\n  const dragStart = (e) => {\r\n    dragged = e.currentTarget;\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    e.dataTransfer.setData('text/html', dragged);\r\n  };\r\n\r\n  // function to detect where the drag is going to end\r\n  const dragEnd = (e) => {\r\n    dragged.style.display = 'block';\r\n    if (dragged.parentNode) {\r\n      dragged.parentNode.removeChild(placeholder);\r\n    }\r\n\r\n    // update state\r\n    var from = Number(dragged.dataset.id);\r\n    var to = Number(over.dataset.id);\r\n    if (from < to) to--;\r\n\r\n    updateHeaderDataDragDrop(from, to);\r\n  };\r\n\r\n  // function to detect the element on which the dragged element is present\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n    dragged.style.display = \"none\";\r\n    if (e.target.className === 'placeholder') return;\r\n\r\n    if (e.target.parentNode && e.target.parentNode.className !== \"custom-dynamic-table-wrapper\") {\r\n      over = e.target;\r\n      e.target.parentNode.insertBefore(placeholder, e.target);\r\n    }\r\n  };\r\n\r\n  // function to display the table data (tbody data)\r\n  const displayTableData = () => {\r\n    let dataArray = [...props.tableData];\r\n    let noDataColLength = visibleColumns.length;\r\n    if (props.tableConfig?.multipleSelectable || props.tableConfig?.radioSelectable) {\r\n      noDataColLength++;\r\n    }\r\n\r\n    if (dataArray.length) {\r\n      return dataArray.map((rowData, index) => {\r\n        return <tr key={`row-${index}`} className={`table-row table-row-${index} ${rowData.selected ? 'table-row-selected' : ''}`}>\r\n          {props.tableConfig?.multipleSelectable ?\r\n            <td>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                id={`row-select-${index}`}\r\n                checked={rowData.selected}\r\n                onChange={() => handleRowSelect(rowData, index)}\r\n              />\r\n            </td>\r\n            : null}\r\n          {props.tableConfig?.radioSelectable ?\r\n            <td>\r\n              <Form.Check\r\n                type=\"radio\"\r\n                id={`row-radio-${index}`}\r\n                checked={rowData.selected}\r\n                onChange={() => handleRowSelect(rowData, index)}\r\n              />\r\n            </td>\r\n            : null}\r\n          {Object.keys(props.tableConfig?.headerFormat).map((header, ind) => {\r\n            return visibleColumns?.indexOf(\r\n              props.tableConfig?.headerFormat[header]?.head\r\n            ) > -1 ? <td key={`${index}-${ind}`} className={`table-column table-column-${index}-${ind}`}>\r\n              {!props.tableConfig?.headerFormat[header].populate\r\n                ? props.tableConfig?.headerFormat[header].isLink ?\r\n                  <Button variant=\"link\"\r\n                    onClick={() => openLink(props.tableConfig?.headerFormat[header], rowData)}>\r\n                    {rowData[props.tableConfig?.headerFormat[header].key]}\r\n                  </Button>\r\n                  :\r\n                  props.tableConfig?.headerFormat[header].image &&\r\n                    rowData[props.tableConfig?.headerFormat[header].key] ?\r\n                    <img src={rowData[props.tableConfig?.headerFormat[header].key]} alt={props.tableConfig?.headerFormat[header].altImageText} className=\"only-photo-column\" />\r\n                    :\r\n                    <span>\r\n                      {/* if the column is for displaying normal text */}\r\n                      {rowData[props.tableConfig?.headerFormat[header].key]}\r\n                    </span>\r\n                :\r\n                props.tableConfig?.headerFormat[header].isLink ?\r\n                  <span>\r\n                    {/* if the column is for displaying text in wrapped object */}\r\n                    <Button variant=\"link\"\r\n                      onClick={() => openLink(props.tableConfig?.headerFormat[header], rowData)}>\r\n                      {formatWrappedObject(\r\n                        props.tableConfig?.headerFormat[header].key,\r\n                        rowData\r\n                      )}\r\n                    </Button>\r\n                  </span>\r\n                  :\r\n                  <span>\r\n                    {/* if the column is for displaying text in wrapped object */}\r\n                    {formatWrappedObject(\r\n                      props.tableConfig?.headerFormat[header].key,\r\n                      rowData\r\n                    )}\r\n                  </span>\r\n\r\n              }\r\n            </td> : null\r\n          })}\r\n\r\n        </tr>\r\n      });\r\n    } else {\r\n      return <tr className='no-data-message'>\r\n        <td colSpan={noDataColLength}>{props.tableConfig?.noDataMessage || 'No Data Found!'}</td>\r\n      </tr>;\r\n    }\r\n\r\n  };\r\n\r\n  // function to display the modal for reordering the columns\r\n  const displayColumnReorderModal = () => {\r\n    const reorderModal = <ColumnModal openColumnModal={openColumnModal}\r\n      toggleColumnModal={toggleColumnModal}\r\n      columns={props?.tableConfig?.headerFormat}\r\n      onDragOver={dragOver}\r\n      onDragEnd={dragEnd}\r\n      onDragStart={dragStart}\r\n    />;\r\n\r\n    if (props.tableConfig?.reOrderColumn && openColumnModal) {\r\n      return reorderModal;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // function to display the column selector\r\n  const displayColumnSelector = () => {\r\n    const columnSelectorButton = <Button\r\n      variant=\"primary\"\r\n      onClick={() => toggleColumnDropdown(!displayColumnDropdown)}\r\n      className='column-selector-dropdown-button'\r\n    >{visibleColumns.length} column selected\r\n      <img\r\n        src={!displayColumnDropdown ? sortDownImage : sortUpImage}\r\n        alt=\"dropdown-arrow\"\r\n        className='column-selector-dropdown-image'\r\n        style={{\r\n          width: \"15px\",\r\n          marginLeft: \"5px\",\r\n          verticalAlign: \"inherit\"\r\n        }} />\r\n    </Button>;\r\n\r\n    const columnSelectorDropdown = <ul className='column-names-list'>\r\n      {Object.keys(props.tableConfig?.headerFormat).map((header, index) => {\r\n        return <li\r\n          key={`column-checkbox-${index}`}\r\n        >\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id={`column-checkbox-${index}`}\r\n            label={`${props.tableConfig?.headerFormat[header].head}`}\r\n            checked={visibleColumns.includes(props.tableConfig?.headerFormat[header].head)}\r\n            onChange={() => handleColumnChange(header)}\r\n          />\r\n        </li>\r\n      })}\r\n    </ul>;\r\n\r\n    const reorderButton = <>\r\n      <button className='btn btn-link change-column-order-link' onClick={() => toggleColumnModal(true)}>{props.tableConfig?.reOrderText || \"Change column order\"}</button>\r\n      {displayColumnReorderModal()}\r\n    </>;\r\n\r\n    if (props.tableConfig?.showHideColumn || props.tableConfig?.reOrderColumn) {\r\n      return <div className={`column-dropdown-wrapper ${props.tableConfig?.columnSelectorPosition?.includes(\"left\") ? 'float-left text-align-left' : 'float-right text-align-right'}`}>\r\n        {props.tableConfig?.showHideColumn ?\r\n          <>\r\n            {columnSelectorButton}\r\n            {displayColumnDropdown ?\r\n              columnSelectorDropdown\r\n              : null}\r\n          </>\r\n          : null}\r\n        {props.tableConfig?.reOrderColumn ?\r\n          reorderButton\r\n          : null}\r\n      </div>\r\n    }\r\n  };\r\n\r\n  // function to display the table\r\n  const displayTable = () => {\r\n    return visibleColumns?.length ? <Table striped bordered hover style={{ position: \"relative\" }}>\r\n      <thead>\r\n        <tr>\r\n          {props.tableConfig?.multipleSelectable || props.tableConfig?.radioSelectable ? <th /> : null}\r\n          {props.tableConfig?.headerFormat && Object.keys(props.tableConfig?.headerFormat).length ?\r\n            Object.keys(props.tableConfig?.headerFormat).map((header, index) => {\r\n              return visibleColumns?.indexOf(\r\n                props.tableConfig?.headerFormat[header]?.head\r\n              ) > -1 ? <th key={`table-head-${index}`} className={`table-head table-head-${index}`}>\r\n                {props.tableConfig?.headerFormat[header].head}\r\n                {props.tableConfig?.headerFormat[header].sort ?\r\n                  props.tableConfig?.headerFormat[header].option?.map((opt, ind1) => {\r\n                    return !opt.isActive ?\r\n                      opt.type === \"DESC\" ? <img\r\n                        src={sortDownImage}\r\n                        alt={`descending-order-${props.tableConfig?.headerFormat[header].head}`}\r\n                        key={`descending-order-${ind1}`}\r\n                        className=\"sort-down\"\r\n                        onClick={() => sort(header, 'DESC')}\r\n                      /> : <img\r\n                        src={sortUpImage}\r\n                        alt={`ascending-order-${props.tableConfig?.headerFormat[header].head}`}\r\n                        key={`ascending-order-${ind1}`}\r\n                        className=\"sort-up\"\r\n                        onClick={() => sort(header, 'ASC')}\r\n                      />\r\n                      : null\r\n                  }) : null}\r\n              </th> : null\r\n            })\r\n            : null}\r\n        </tr>\r\n        {props.tableConfig?.filter ?\r\n          <tr>\r\n            {props.tableConfig?.multipleSelectable ? <th>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                id={`select-all-row`}\r\n                checked={props.tableData?.every(each => each.selected)}\r\n                onChange={selectUnselectAllRow}\r\n              />\r\n            </th> : null}\r\n            {props.tableConfig?.radioSelectable ? <th /> : null}\r\n            {props.tableConfig?.headerFormat && Object.keys(props.tableConfig?.headerFormat).length ?\r\n              Object.keys(props.tableConfig?.headerFormat).map((header, index) => {\r\n                return visibleColumns?.indexOf(\r\n                  props.tableConfig?.headerFormat[header]?.head\r\n                ) > -1 ? <th key={`table-head-${index}`} className={`table-head table-head-${index}`}>\r\n                  {props.tableConfig?.headerFormat[header].filterObject && Object.keys(props.tableConfig?.headerFormat[header].filterObject).length ?\r\n                    props.tableConfig?.headerFormat[header].filterObject?.type === \"TEXT\" ?\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder={props.tableConfig?.headerFormat[header].filterObject?.placeholder || ''}\r\n                        value={props.tableConfig?.headerFormat[header].filterObject?.value}\r\n                        onChange={(e) => filterByText(e.target.value, header)}\r\n                      />\r\n                      : props.tableConfig?.headerFormat[header].filterObject?.type === \"SELECT\" ?\r\n                        <Form.Select aria-label=\"Default select example\"\r\n                          value={props.tableConfig?.headerFormat[header].filterObject?.selectedItem?.key}\r\n                          onChange={(e) => filterBySelection(e.target.value, header)}\r\n                        >\r\n                          {props.tableConfig?.headerFormat[header].filterObject?.list?.map(item => {\r\n                            return <option key={item.key} value={item.key}>{item.value}</option>\r\n                          })}\r\n                        </Form.Select> :\r\n                        props.tableConfig?.headerFormat[header].filterObject?.type === \"DATE\" ?\r\n                          <DatePicker\r\n                            selected={props.tableConfig?.headerFormat[header].filterObject?.value}\r\n                            onChange={date => setDateFilter(date, header)}\r\n                            showMonthDropdown\r\n                            showYearDropdown\r\n                            dropdownMode=\"select\"\r\n                            isClearable\r\n                            placeholderText={props.tableConfig?.headerFormat[header].filterObject?.placeholder || ''}\r\n                            dateFormat={props.tableConfig?.headerFormat[header].filterObject?.dateFormat || 'dd/MM/yyyy'}\r\n                          />\r\n                          : null\r\n                    : null}\r\n                </th> : null\r\n              })\r\n              : null}\r\n          </tr> : null}\r\n      </thead>\r\n      <tbody>\r\n        {displayTableData()}\r\n      </tbody>\r\n    </Table> : null\r\n  };\r\n\r\n  // function to display the pagination\r\n  const displayPagination = () => {\r\n    if (props.tableConfig?.pagination && props.tableData?.length && visibleColumns?.length) {\r\n      return <ReactPaginate\r\n        previousLabel=\"<\"\r\n        nextLabel=\">\"\r\n        pageClassName=\"page-item\"\r\n        pageLinkClassName=\"page-link\"\r\n        previousClassName=\"page-item\"\r\n        previousLinkClassName=\"page-link\"\r\n        nextClassName=\"page-item\"\r\n        nextLinkClassName=\"page-link\"\r\n        breakLabel=\"...\"\r\n        breakClassName=\"page-item\"\r\n        breakLinkClassName=\"page-link\"\r\n        pageCount={props.tableConfig?.allData ? Math.ceil(allData?.length / props.tableConfig?.limit) : Math.ceil(props.tableData?.length / props.tableConfig?.limit)}\r\n        onPageChange={handlePageClick}\r\n        containerClassName={`pagination ${props.tableConfig?.paginationPosition?.includes(\"left\") ? 'float-left' : 'float-right'}`}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage - 1}\r\n      />\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // function to display the full view of the component\r\n  const displayFullView = () => {\r\n    let fullView = null;\r\n    if (props.tableConfig?.columnSelectorPosition?.includes(\"bottom\")) {\r\n      if (props.tableConfig?.paginationPosition?.includes(\"bottom\")) {\r\n        fullView = <>\r\n          {displayTable()}\r\n          {displayColumnSelector()}\r\n          {displayPagination()}\r\n        </>;\r\n      } else {\r\n        fullView = <>\r\n          {displayPagination()}\r\n          {displayTable()}\r\n          {displayColumnSelector()}\r\n        </>\r\n      }\r\n    } else {\r\n      if (props.tableConfig?.paginationPosition?.includes(\"bottom\")) {\r\n        fullView = <>\r\n          {displayColumnSelector()}\r\n          {displayTable()}\r\n          {displayPagination()}\r\n        </>\r\n      } else {\r\n        fullView = <>\r\n          {displayColumnSelector()}\r\n          {displayPagination()}\r\n          {displayTable()}\r\n        </>\r\n      }\r\n\r\n      return fullView;\r\n    }\r\n  };\r\n\r\n  // updating visible columns array of the component from the parent data\r\n  useEffect(() => {\r\n    if (props.tableConfig?.visibleColumns?.length) {\r\n      updateVisibleColumns([...props.tableConfig?.visibleColumns]);\r\n    }\r\n\r\n  }, [props.tableConfig?.visibleColumns]);\r\n\r\n  // if the current page changed then handle all selection or all table data\r\n  useEffect(() => {\r\n    toggleAllRowSelection(props.tableData?.every(each => each.selected));\r\n    if (props.tableConfig?.allData) {\r\n      changeTableData();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage]);\r\n\r\n  // detect when forced table refresh is needed\r\n  useEffect(() => {\r\n    if (detectDataUpdate) {\r\n      changeTableData();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [detectDataUpdate]);\r\n\r\n  // updating current page number from the parent current page value\r\n  useEffect(() => {\r\n    if (props.paginationCurrentPage) {\r\n      updateCurrentPage(props.paginationCurrentPage);\r\n    }\r\n  }, [props.paginationCurrentPage]);\r\n\r\n  // if the table is populated with all data (local pagination and filtering) then update the component with all data\r\n  useEffect(() => {\r\n    if (props.tableConfig?.allData) {\r\n      updateAllData([...props.allData]);\r\n    }\r\n    window.onclick = (ev) => {\r\n      if (!((ev.target.className?.includes('form-check-input') && ev.target.id.includes(\"column-checkbox\")) ||\r\n        (ev.target.className?.includes('form-check-label') && ev.target.htmlFor.includes(\"column-checkbox\")) ||\r\n        ev.target.className.includes('column-selector-dropdown'))) {\r\n        toggleColumnDropdown(false);\r\n      }\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"custom-dynamic-table-wrapper\">\r\n      {displayFullView()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomDynamicTable;\r\n","export const initialTableData = [\r\n    {\r\n      id: 1,\r\n      personalInfo: {\r\n        fullName: \"John Doe\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"a@b.com\"\r\n      },\r\n      userId: \"A\",\r\n      accountStatus: 1,\r\n      createdAt: \"22/05/2019\",\r\n      profileImage: \"https://www.kindpng.com/picc/m/690-6904538_men-profile-icon-png-image-free-download-searchpng.png\"\r\n    },\r\n    {\r\n      id: 2,\r\n      personalInfo: {\r\n        fullName: \"Nevine Acotanza\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"c@b.com\"\r\n      },\r\n      userId: \"B\",\r\n      accountStatus: 2,\r\n      createdAt: \"23/05/2019\",\r\n      profileImage: \"https://www.kindpng.com/picc/m/690-6904538_men-profile-icon-png-image-free-download-searchpng.png\"\r\n    },\r\n    {\r\n      id: 3,\r\n      personalInfo: {\r\n        fullName: \"John Doe1\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"a@b.com\"\r\n      },\r\n      userId: \"D\",\r\n      accountStatus: 1,\r\n      createdAt: \"24/05/2019\"\r\n    },\r\n    {\r\n      id: 4,\r\n      personalInfo: {\r\n        fullName: \"Nevine Acotanza1\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"c@b.com\"\r\n      },\r\n      userId: \"C\",\r\n      accountStatus: 2,\r\n      createdAt: \"22/05/2019\"\r\n    },\r\n    {\r\n      id: 5,\r\n      personalInfo: {\r\n        fullName: \"John Doe2\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"c@b.com\"\r\n      },\r\n      userId: \"F\",\r\n      accountStatus: 1,\r\n      createdAt: \"23/05/2019\"\r\n    },\r\n    {\r\n      id: 6,\r\n      personalInfo: {\r\n        fullName: \"Nevine Acotanza2\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"c@b.com\"\r\n      },\r\n      userId: \"E\",\r\n      accountStatus: 2,\r\n      createdAt: \"20/05/2019\"\r\n    },\r\n    {\r\n      id: 7,\r\n      personalInfo: {\r\n        fullName: \"John Doe3\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"a@a.com\"\r\n      },\r\n      userId: \"I\",\r\n      accountStatus: 1,\r\n      createdAt: \"22/05/2019\"\r\n    },\r\n    {\r\n      id: 8,\r\n      personalInfo: {\r\n        fullName: \"Nevine Acotanza3\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"a@a.com\"\r\n      },\r\n      userId: \"G\",\r\n      accountStatus: 2,\r\n      createdAt: \"23/05/2019\"\r\n    },\r\n    {\r\n      id: 9,\r\n      personalInfo: {\r\n        fullName: \"John Doe4\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"a@a.com\"\r\n      },\r\n      userId: \"H\",\r\n      accountStatus: 1,\r\n      createdAt: \"20/05/2019\"\r\n    },\r\n    {\r\n      id: 10,\r\n      personalInfo: {\r\n        fullName: \"Nevine Acotanza4\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"a@a.com\"\r\n      },\r\n      userId: \"J\",\r\n      accountStatus: 2,\r\n      createdAt: \"23/05/2019\"\r\n    },\r\n    {\r\n      id: 11,\r\n      personalInfo: {\r\n        fullName: \"John Doe\",\r\n        phone: { number: \"9876543210\" },\r\n        email: \"a@b.com\"\r\n      },\r\n      userId: \"K\",\r\n      accountStatus: 1,\r\n      createdAt: \"22/05/2019\",\r\n      profileImage: \"https://www.kindpng.com/picc/m/690-6904538_men-profile-icon-png-image-free-download-searchpng.png\"\r\n    }\r\n  ];","import { useState } from 'react';\nimport './App.css';\nimport CustomDynamicTable from \"./CustomDynamicTable\";\nimport { initialTableData } from './constant';\n\nconst initialTableConfig = {\n  visibleColumns: [\n    \"User Name\",\n    \"Email\",\n    \"User Id\",\n    \"Status\",\n    \"Joining Date\",\n    \"Photo\"\n  ], // to display the default column header values\n  skip: 0, // always set it to 0\n  limit: 3, // to display the number of rows in a page in the table\n  multiSort: false, // if multisort is applicable (only for API data handled)\n  filter: true, // if filters needs to be displayed\n  pagination: true, // if pagination needs to be displayed\n  multipleSelectable: false, // if select multiple rows option present\n  radioSelectable: true, // if choose single row option present \n  uniqueRowKey: \"id\", // unique identifier key (key present in the table data) for the table rows\n  allData: true, // if filter, pagination, sort handled from UI\n  showHideColumn: true, // if column selector needed\n  reOrderColumn: true, // if reorder column option needed\n  reOrderText: \"Reorder column\", // text to display to the reorder column section\n  noDataMessage: \"No result available\", // if no data available to display in the table\n  columnSelectorPosition: \"top-right\", // set the position of the column selector around the table, possible opions: top-right, top-left, bottom-right, bottom-left\n  paginationPosition: \"bottom-right\", // set the position of the pagination around the table, possible opions: top-right, top-left, bottom-right, bottom-left\n  headerFormat: {\n    profileImage: {\n      head: \"Photo\",\n      key: \"profileImage\",\n      image: true,\n      altImageText: \"profile\"\n    }, // configuation for image type data\n    userId: {\n      head: \"User Id\",\n      key: \"userId\",\n      isLink: true,\n      linkTo: \"/web/admin/auth/riders/details\",\n      query: [\"id\", \"userId\"],\n      queryTextToDisplay: [\"userId\", \"customerId\"],\n      sort: true,\n      option: [\n        {\n          type: \"DESC\",\n          isActive: false\n        },\n        {\n          type: \"ASC\",\n          isActive: false\n        }\n      ],\n      // param: \"id\",\n      // param: [\"id\", \"userId\"],\n      // query: \"id\",\n      // queryTextToDisplay: \"userId\"\n    }, // configuartion for linked text type data, you can send query or param with the data (not both at this moment), \n    // sort option is also available, you have to send option array as displayed for the sorting functionality\n    \"personalInfo.fullName\": {\n      head: \"User Name\",\n      key: [\"personalInfo\", \"fullName\"],\n      populate: true,\n      sort: true,\n      option: [\n        {\n          type: \"DESC\",\n          isActive: false\n        },\n        {\n          type: \"ASC\",\n          isActive: false\n        }\n      ],\n      filterObject: {\n        type: \"TEXT\",\n        placeholder: \"Enter Name\",\n        value: \"\"\n      }\n    }, // configuaration for normal text with the key wrapped within an object (only a single object wrapper), for this you have to pass populate as true, also filter with text input is available\n    \"personalInfo.email\": {\n      head: \"Email\",\n      key: [\"personalInfo\", \"email\"],\n      populate: true,\n      sort: true,\n      option: [\n        {\n          type: \"DESC\",\n          isActive: false\n        },\n        {\n          type: \"ASC\",\n          isActive: false\n        }\n      ],\n      filterObject: {\n        type: \"SELECT\",\n        list: [{\n          key: \"-1\", // please send the 1st element key as \"-1\"\n          value: \"Select Email\"\n        }, {\n          key: \"1\",\n          value: \"a@b.com\"\n        }, {\n          key: \"2\",\n          value: \"c@b.com\"\n        }],\n        selectedItem: {\n          key: \"-1\",\n          value: \"Select Email\"\n        } // default selected item from the list\n      }\n    }, // configuaration for normal text with the key wrapped within an object (only a single object wrapper), for this you have to pass populate as true, also filter with select dropdown is available\n    accountStatus: {\n      head: \"Status\",\n      key: \"accountStatus\"\n    },\n    createdAt: {\n      head: \"Joining Date\",\n      key: \"createdAt\",\n      filterObject: {\n        type: \"DATE\",\n        placeholder: \"Enter Date (dd/mm/yyyy)\",\n        value: null, // please send value as null initially\n        dateFormat: \"dd/MM/yyyy\" // please use appropriate date format used in react-datepicker\n      }\n    } // configuaration for normal text with the key wrapped within an object (only a single object wrapper), for this you have to pass populate as true, also filter with date is available\n  }\n};\n\nconst App = () => {\n  const [tableConfig, updateTableConfig] = useState({ ...initialTableConfig });\n  const [tableData, updateTableData] = useState([...initialTableData]);\n\n  const filterByText = (searchText, key) => {\n    console.log(\"filterByText \", searchText, key);\n  };\n\n  const filterBySelection = (searchText, key) => {\n    console.log(\"filterBySelection \", searchText, key);\n  };\n\n  const filterByDate = (selectedDate, key) => {\n    console.log(\"filterByDate \", selectedDate, key);\n  };\n\n  const sortData = (sortedHeaderObj, sortType) => {\n    console.log(\"sort ---------> \", sortedHeaderObj, sortType);\n  };\n\n  const handlePageChange = (selectedPageNumber) => {\n    console.log(\"handlePageChange \", selectedPageNumber);\n  };\n\n  const handleMultipleRowSelect = (clickedRowItem, clickedIndex, updatedDataArray) => {\n    console.log(\"handleMultipleRowSelect \", clickedRowItem, clickedIndex, updatedDataArray);\n  };\n\n  const selectUnselectAllRow = (allRowSelected) => {\n    console.log(\"selectUnselectAllRow \", allRowSelected);\n  };\n\n  return (\n    <div className=\"App\">\n      <CustomDynamicTable\n        tableConfig={tableConfig} // table configuration object\n        updateTableConfig={updateTableConfig} // function to update the table configuration\n        tableData={[...tableData]} // table data (array of objects)\n        sortData={sortData} // function to get the table column header object by which the table will be sorted and the sort type (ASC/DESC)\n        filterByText={filterByText} // function to get the typed text by which the table to be filtered and the key of the table column header\n        filterBySelection={filterBySelection} // function to get the selected value by which the table to be filtered and the key of the table column header\n        filterByDate={filterByDate} // function to get the selected date by which the table to be filtered and the key of the table column header\n        handlePageChange={handlePageChange} // function to get the current page number of the table\n        handleMultipleRowSelect={handleMultipleRowSelect} // function to get the selected/ unselected row details\n        updateTableData={updateTableData} // function to update the table data\n        selectUnselectAllRow={selectUnselectAllRow} // function to get the selected/ unselected row details\n        allData={[...initialTableData]} // this props is used to always have the full data of the table which will not be filtered\n        paginationCurrentPage={1} // props to send the current page number to be selected\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}